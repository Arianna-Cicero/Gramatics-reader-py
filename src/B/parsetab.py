
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CARACTER_ACENTUADO CARACTER_ESPECIAL ESCREVER LPAREN MINUS NUMERO PLUS RPAREN STRINGS : comando comando : ESCREVER LPAREN expressao RPARENexpressao : expressao PLUS expressao\n                 | expressao MINUS expressaoexpressao : LPAREN expressao RPARENexpressao : NUMEROexpressao : STRINGexpressao : CARACTER_ESPECIALexpressao : CARACTER_ACENTUADO'
    
_lr_action_items = {'ESCREVER':([0,],[3,]),'$end':([1,2,12,],[0,-1,-2,]),'LPAREN':([3,4,5,13,14,],[4,5,5,5,5,]),'NUMERO':([4,5,13,14,],[7,7,7,7,]),'STRING':([4,5,13,14,],[8,8,8,8,]),'CARACTER_ESPECIAL':([4,5,13,14,],[9,9,9,9,]),'CARACTER_ACENTUADO':([4,5,13,14,],[10,10,10,10,]),'RPAREN':([6,7,8,9,10,11,15,16,17,],[12,-6,-7,-8,-9,15,-5,-3,-4,]),'PLUS':([6,7,8,9,10,11,15,16,17,],[13,-6,-7,-8,-9,13,-5,13,13,]),'MINUS':([6,7,8,9,10,11,15,16,17,],[14,-6,-7,-8,-9,14,-5,14,14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S':([0,],[1,]),'comando':([0,],[2,]),'expressao':([4,5,13,14,],[6,11,16,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S","S'",1,None,None,None),
  ('S -> comando','S',1,'p_inicio','lexer.py',81),
  ('comando -> ESCREVER LPAREN expressao RPAREN','comando',4,'p_comando','lexer.py',86),
  ('expressao -> expressao PLUS expressao','expressao',3,'p_expressao_aritmetica','lexer.py',94),
  ('expressao -> expressao MINUS expressao','expressao',3,'p_expressao_aritmetica','lexer.py',95),
  ('expressao -> LPAREN expressao RPAREN','expressao',3,'p_expressao_parentheses','lexer.py',102),
  ('expressao -> NUMERO','expressao',1,'p_expressao_numero','lexer.py',106),
  ('expressao -> STRING','expressao',1,'p_expressao_string','lexer.py',110),
  ('expressao -> CARACTER_ESPECIAL','expressao',1,'p_expressao_caracter_especial','lexer.py',114),
  ('expressao -> CARACTER_ACENTUADO','expressao',1,'p_expressao_caracter_acentuado','lexer.py',119),
]
